#!/usr/bin/env bash

set -e

PATH="$HOME/.nodenv/bin:$HOME/.rbenv/bin:$PATH"

# Ensure shell is zsh
shell_path="/usr/local/bin/zsh"
if ! grep "$shell_path" /etc/shells > /dev/null 2>&1 ; then
  echo "Adding '$shell_path' to /etc/shells"
  sudo sh -c "echo $shell_path >> /etc/shells"
fi

case "$SHELL" in
  */zsh) : ;;
  *)
    echo "Changing your shell to zsh ..."
      chsh -s "$(which zsh)"
    ;;
esac

# Setup vim-plug
if [ -e "$HOME"/.vim/autoload/plug.vim ]; then
  vim -Es +PlugUpgrade +qa || true
else
  curl -fLo "$HOME"/.vim/autoload/plug.vim --create-dirs \
      https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  vim -Es +PlugInstall +qa || true
fi

if ! base16-manager list | grep -q chriskempson/base16-shell; then
  base16-manager install chriskempson/base16-shell
fi

if ! base16-manager list | grep -q chriskempson/base16-vim; then
  base16-manager install chriskempson/base16-vim
fi

base16-manager set eighties

echo "Configuring Ruby ..."
find_latest_ruby() {
  rbenv install -l | grep -v - | tail -1 | sed -e 's/^ *//'
}

ruby_version="$(find_latest_ruby)"
eval "$(rbenv init -)"

if ! rbenv versions | grep -Fq "$ruby_version"; then
  rbenv install -s "$ruby_version"
fi

rbenv global "$ruby_version"
rbenv shell "$ruby_version"
gem update --system
gem install 'bundler'
number_of_cores=$(sysctl -n hw.ncpu)
bundle config --global jobs $((number_of_cores - 1))

echo "Configuring Node ..."
find_latest_node() {
  nodenv install -l | grep -v - | grep '^\s*[0-9]' | tail -1 | sed -e 's/^ *//'
}

node_version="$(find_latest_node)"
eval "$(nodenv init -)"

if ! nodenv versions | grep -Fq "$node_version"; then
  nodenv install -s "$node_version"
fi

nodenv global "$node_version"
nodenv shell "$node_version"
nodenv default-packages install --all

echo "Configuring Python for NeoVim ..."
pip3 install neovim

tic -x ~/.config/terminfo/tmux-256color-italic.terminfo
tic -x ~/.config/terminfo/xterm-256color-italic.terminfo

if [ ! -f "/Library/LaunchDaemons/limit.maxfiles.plist" ]; then
  cat <<EOS | sudo tee /Library/LaunchDaemons/limit.maxproc.plist >/dev/null
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>Label</key>
      <string>limit.maxfiles</string>
    <key>ProgramArguments</key>
      <array>
        <string>launchctl</string>
        <string>limit</string>
        <string>maxfiles</string>
        <string>524288</string>
        <string>524288</string>
      </array>
    <key>RunAtLoad</key>
      <true/>
    <key>ServiceIPC</key>
      <false/>
  </dict>
</plist>
EOS
fi

if [ ! -f "/Library/LaunchDaemons/limit.maxproc.plist" ]; then
  cat <<EOS | sudo tee /Library/LaunchDaemons/limit.maxproc.plist >/dev/null
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>Label</key>
      <string>limit.maxproc</string>
    <key>ProgramArguments</key>
      <array>
        <string>launchctl</string>
        <string>limit</string>
        <string>maxproc</string>
        <string>2048</string>
        <string>2048</string>
      </array>
    <key>RunAtLoad</key>
      <true/>
    <key>ServiceIPC</key>
      <false/>
  </dict>
</plist>
EOS
fi
