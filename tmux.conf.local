# {{{ Keybindings
set -g prefix2 C-Space

# Send C-Space with repeat option via C-Space C-Space
bind C-Space send-prefix -2

bind \ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind C-l send-keys -R \; clear-history

bind t new-window "tig"
bind i split-window -h -c ~/Dropbox/Inbox "reattach-to-user-namespace vim ."
bind C-r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"
# }}}

# {{{ General settings
set -g default-terminal "tmux-256color"

setw -g mouse on

# 12 hour clock
set-window-option -g clock-mode-style 12

# Reattach all shell commands
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"
# }}}

# {{{ copy-mode
# Use vim keybindings in copy mode
setw -g mode-keys vi
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down
unbind-key -T copy-mode-vi Space;   bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi C-v  ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [    ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]    ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection
# }}}

# {{{ Status
# Use emacs / readline key-bindings at the tmux command prompt `<prefix>:`
set -g status-keys emacs

set -g status-position "top"
set -g status-right-length "100"
set -g status-left-length "100"

# session name on left
set -g status-left "(#S) "

# More useful status-right with battery percentage and nicely formated datetime
set -g status-right "#[fg=white]#(date '+%a, %b %d - %I:%M')#[default] #h #(battery -p -t) "
# }}}

# {{{ Vim integration

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
should_send_keys="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|fzf|n?vim?x?)(diff)?$'"

bind-key -n C-h if-shell "$should_send_keys" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$should_send_keys" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$should_send_keys" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$should_send_keys" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$should_send_keys" "send-keys C-\\" "select-pane -l"


# Make Vim responsive to esc
set -s escape-time 0
# }}}

# vim: foldmethod=marker:foldlevel=0
