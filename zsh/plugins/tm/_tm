#compdef tm
#autoload

_tm_complete() {
  local curcontext="$curcontext" state line
  typeset -A opt_args

  _arguments \
    '1: :->session'\
    '2: :->window'

  case $state in
    session)
      _sessions=$(tmux -q list-sessions 2> /dev/null | cut -f 1 -d ':' | tr "\n" "  ")
      _arguments "1:Sessions:($_sessions)"
    ;;
    window)
      _session=$words[2]
      _windows=$(tmux list-windows -t $_session 2> /dev/null | awk '{print $2}' | tr -d '*-' | tr "\n" "\t")
      _arguments "2:Windows:($_windows)"
    ;;
  esac

  # local nocasematchWasOff=0
  # setopt nocasematch >/dev/null || nocasematchWasOff=1
  # (( nocasematchWasOff )) && setopt -s nocasematch

  # local w matches=()

  # if [[ $token == "" ]]; then
  #   matches=($words)
  # else
  #   for w in $words; do
  #     rx=$(ruby -e "print '$token'.gsub(/\s+/,'').split('').join('.*')")
  #     if [[ "$w" =~ $rx ]]; then
  #       matches+=($w)
  #     fi
  #   done
  # fi

  # (( nocasematchWasOff )) && setopt -u nocasematch

  # COMPREPLY=("${matches[@]}")
}

_tm_complete "$@"
