" Jacob Smith's .vimrc
" Adds to thoughtbot/dotfiles/vimrc and vim-sensible

" Core Settings {{{
set showmode                   "Show current mode down the bottom
set visualbell                  "No sounds
set autoread                    "Reload files changed outside vim

" Indentation
set autoindent
set smartindent
set smarttab
set breakindent
let &showbreak = '‚Üí '
set linebreak

" Folds
set foldmethod=indent   "fold based on indent
set foldnestmax=3       "deepest fold is 3 levels
set nofoldenable        "dont fold by default

" Search
set hlsearch    " highlight matches
set ignorecase  " searches are case insensitive...
set smartcase   " ... unless they contain at least one capital letter
set infercase   " Use the correct case when autocompleting

set modelines=1 " Allow modelines (i.e. executable comments)
set background=dark
colorscheme solarized
set cursorline

" Persistent undo
let undodir = expand('~/.vim/undo')
if !isdirectory(undodir)
  call mkdir(undodir)
endif
set undodir=~/.vim/undo
set undofile

let $NVIM_TUI_ENABLE_CURSOR_SHAPE=1
" }}}

" Tweaks {{{
" fix & command to preserve flags
nnoremap & :&&<CR>
xnoremap & :&&<CR>

" Expand %% to current directory
cnoremap %% <C-R>=fnameescape(expand('%:h')).'/'<cr>

" automatically rebalance windows on vim resize
autocmd VimResized * wincmd =
" }}}

" Keyboard bindings {{{
vnoremap <Leader>y "*y
vnoremap <Leader>d "*d
vnoremap <Leader>p "*p

nnoremap <Leader>y "*y
nnoremap <Leader>p "*p
nnoremap <Leader>P "*P

nnoremap <silent> <leader>gq :g/^/norm gqq<CR> " format all paragraphs
nnoremap <silent> <leader>gj :%norm vipJ<CR> " unformat all paragraphs

" zoom a vim pane, <C-w>= to re-balance
nnoremap <leader>- :wincmd _<cr>:wincmd \|<cr>
nnoremap <leader>= :wincmd =<cr>

nnoremap <leader><C-L> :nohlsearch<CR>:redraw!<CR>

nnoremap <leader>d :Dispatch<CR>

nnoremap \ :Ag<SPACE>
" }}}

" Plugin settings {{{
let g:vim_json_syntax_conceal = 0

" Airline
let g:airline_theme = 'solarized'
let g:airline_left_sep = ' '
let g:airline_right_sep = ' '
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#tab_min_count = 2
let g:airline#extensions#tabline#show_buffers = 0
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'
let g:airline#extensions#tabline#right_sep = ' '
let g:airline#extensions#tabline#right_alt_sep = '|'
let g:airline#extensions#tabline#show_tab_type = 0
let g:airline#extensions#tabline#show_close_button = 0

let g:airline_section_y = ""       " remove fileencoding[fileformat]

" Syntastic
let syntastic_mode_map = { 'passive_filetypes': ['html'] }
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_json_checkers = ['jsonlint']

let g:syntastic_error_symbol = '‚ùå'
let g:syntastic_style_error_symbol = '‚ÅâÔ∏è'
let g:syntastic_warning_symbol = '‚ö†Ô∏è'
let g:syntastic_style_warning_symbol = 'üí©'

highlight link SyntasticErrorSign SignColumn
highlight link SyntasticWarningSign SignColumn
highlight link SyntasticStyleErrorSign SignColumn
highlight link SyntasticStyleWarningSign SignColumn

" Taskpaper
autocmd FileType taskpaper set nolist

" Rust
autocmd FileType rust let b:dispatch = 'cargo build'
autocmd FileType rust nnoremap <buffer> <leader>r :!cargo run<CR>

" YouCompleteMe
let g:ycm_rust_src_path = '/usr/local/rust/rustc-1.8.0/src'

" CtrlP
" Ignore non project files
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/](\.git|\.template|node_modules|development|release)$',
  \ }

let g:mustache_abbreviations = 1
" }}}

" Prose {{{

" Goyo
function! s:goyo_enter()
  set noshowmode
  set noshowcmd
  set virtualedit=
  noremap  <buffer> <silent> k gk
  noremap  <buffer> <silent> j gj
  noremap  <buffer> <silent> <Home> g<Home>
  noremap  <buffer> <silent> <End>  g<End>
  inoremap <buffer> <silent> <Up>   <C-o>gk
  inoremap <buffer> <silent> <Down> <C-o>gj
  inoremap <buffer> <silent> <Home> <C-o>g<Home>
  inoremap <buffer> <silent> <End>  <C-o>g<End>
endfunction

function! s:goyo_leave()
  set showmode
  set showcmd
  set virtualedit=all
  silent! nunmap <buffer> k
  silent! nunmap <buffer> j
  silent! nunmap <buffer> <Home>
  silent! nunmap <buffer> <End>
  silent! iunmap <buffer> <Up>
  silent! iunmap <buffer> <Down>
  silent! iunmap <buffer> <Home>
  silent! iunmap <buffer> <End>
endfunction

autocmd! User GoyoEnter
autocmd! User GoyoLeave
autocmd  User GoyoEnter nested call <SID>goyo_enter()
autocmd  User GoyoLeave nested call <SID>goyo_leave()
" }}}

" vim: foldmethod=marker:foldlevel=0
